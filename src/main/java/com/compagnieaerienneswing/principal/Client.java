/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.compagnieaerienneswing.principal;

import javax.swing.JOptionPane;
import com.compagnieaerienneswing.dao.*;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author damie
 */

public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
        
        String title = "Créer un compte client";
        this.setTitle(title);
        
        loadCountryData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        textNom = new javax.swing.JTextField();
        textPrenom = new javax.swing.JTextField();
        textDateNaiss = new javax.swing.JTextField();
        textAdresse = new javax.swing.JTextField();
        textVille = new javax.swing.JTextField();
        textCp = new javax.swing.JTextField();
        textMail = new javax.swing.JTextField();
        btnCreer = new javax.swing.JButton();
        comboPays = new javax.swing.JComboBox<>();
        textPassword = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuCreateAccount = new javax.swing.JMenu();
        menuManageAccount = new javax.swing.JMenu();
        menuAirport = new javax.swing.JMenu();
        menuAirline = new javax.swing.JMenu();
        menuCountry = new javax.swing.JMenu();
        menuBooking = new javax.swing.JMenu();
        menuFlight = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Créer un compte client");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 200, 60));

        jLabel2.setText("Mot de passe");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 470, -1, -1));

        jLabel3.setText("Nom");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, -1, -1));

        jLabel4.setText("Prénom");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, -1, -1));

        jLabel5.setText("Date de naissance");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, -1, -1));

        jLabel6.setText("Adresse");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, -1, -1));

        jLabel7.setText("Ville");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, -1, -1));

        jLabel8.setText("Code postal");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, -1, -1));

        jLabel9.setText("Pays");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, 30, -1));

        jLabel10.setText("Email");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 430, -1, -1));
        getContentPane().add(textNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 270, 30));
        getContentPane().add(textPrenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 270, 30));
        getContentPane().add(textDateNaiss, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 270, 30));
        getContentPane().add(textAdresse, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 260, 270, 30));
        getContentPane().add(textVille, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, 270, 30));
        getContentPane().add(textCp, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, 270, 30));
        getContentPane().add(textMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 420, 270, 30));

        btnCreer.setText("Créer");
        btnCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreerActionPerformed(evt);
            }
        });
        getContentPane().add(btnCreer, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, 120, 50));

        getContentPane().add(comboPays, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 380, 270, 30));
        getContentPane().add(textPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, 270, 30));

        menuCreateAccount.setText("Créer un compte client");
        menuCreateAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuCreateAccountMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuCreateAccount);

        menuManageAccount.setText("Gestion du compte");
        menuManageAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuManageAccountMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuManageAccount);

        menuAirport.setText("Aéroport");
        menuAirport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAirportMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuAirport);

        menuAirline.setText("Compagnie");
        menuAirline.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuAirlineMenuSelected(evt);
            }
        });
        jMenuBar1.add(menuAirline);

        menuCountry.setText("Pays");
        menuCountry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuCountryMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuCountry);

        menuBooking.setText("Réservation");
        menuBooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBookingMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuBooking);

        menuFlight.setText("Vol");
        menuFlight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuFlightMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuFlight);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isNullOrEmpty(String str){
        if (str == null || str.length() == 0){
            return true;
        }
        return false;
    }
    
    // Load countries data
    private void loadCountryData() {      
        PaysDAO pays = new PaysDAO();
        String query = "SELECT * FROM pays ORDER BY nom";
        ArrayList<Pays> paysList = pays.select(query);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        
        // Alimente la combo box des pays
        for (int i = 0; i < paysList.size(); i++){
            int id = paysList.get(i).getId();
            String name = paysList.get(i).getName();
            
            model.addElement(new Pays(id, name));
        }

        comboPays.setModel(model);
    }
    
    // Insert new customer into the database
    private void btnCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreerActionPerformed
        Object item = comboPays.getSelectedItem();            
        
        String nom = textNom.getText();
        String prenom = textPrenom.getText();
        String dateNaiss = textDateNaiss.getText();
        String adresse = textAdresse.getText();
        String ville = textVille.getText();
        String cp = textCp.getText();
        int idPays = ((Pays)item).getId();
        String mail = textMail.getText();
        String password = textPassword.getText();
        
        Pattern datePattern = Pattern.compile("^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$");
        Matcher matcher = datePattern.matcher(dateNaiss);
        boolean isDateValid = matcher.matches();
        
        Pattern mailPattern = Pattern.compile("(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])");
        matcher = mailPattern.matcher(mail);
        boolean isMailValid = matcher.matches();
        
        try{
            if (isNullOrEmpty(nom) || isNullOrEmpty(prenom) || isNullOrEmpty(dateNaiss) || isNullOrEmpty(adresse)
                    || isNullOrEmpty(ville) || isNullOrEmpty(cp) || isNullOrEmpty(mail) || isNullOrEmpty(password) ){
                throw new Exception("Erreur : tous les champs sont requis !");
            }
            
            if (!isDateValid)
                throw new Exception("Le format de la date de naissance est incorrect ! Le format doit être de type yyyy-MM-dd");
            
            if (!isMailValid)
                throw new Exception("Le format de l'adresse mail est erroné !");
            
            ClientDAO client = new ClientDAO();
            ArrayList<Compte> compteList = client.select(String.format("SELECT * FROM personne INNER JOIN client on personne.idpersonne = client.personne_idpersonne WHERE email = '%s'", mail));
            
            if(compteList.size() > 0)
                throw new Exception("L'adresse mail est déjà utilisée.");
            
            String sql = String.format("INSERT INTO personne VALUES (default, '%s', '%s', '%s', '%s', '%s', '%s', '%s')",
                nom, prenom, dateNaiss, adresse, ville, cp, idPays);

            PersonneDAO personne = new PersonneDAO();
            int personneId = personne.insert(sql);
            
            if (personneId == 0){
                throw new Exception("Une erreur est survenue ! L'utilisateur n'a pas été créé.");
            }
            
            MySQL mySql = new MySQL();           
            sql = String.format("INSERT INTO client VALUES ('%s', '%s', '%s')", mail, password, personneId);
            String clientInsert = mySql.insert(sql);
            
            if (clientInsert != "OK"){
                // Si l'utilisateur n'a pas pu être créé, supprimer les données qui ont été ajoutées dans la table 'personne'
                sql = String.format("DELETE FROM personne WHERE idpersonne = %s", personneId);
                mySql.delete(sql);
                throw new Exception("Une erreur est survenue ! L'utilisateur n'a pas été créé.");
            }
                
            JOptionPane.showMessageDialog(null, "L'utilisateur a correctement été créé !");
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnCreerActionPerformed

    private void menuCreateAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuCreateAccountMouseClicked
        new Client().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuCreateAccountMouseClicked

    private void menuManageAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuManageAccountMouseClicked
        new Compte().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuManageAccountMouseClicked

    private void menuAirportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAirportMouseClicked
        new Aeroport().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuAirportMouseClicked

    private void menuAirlineMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuAirlineMenuSelected
        new Compagnie().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuAirlineMenuSelected

    private void menuCountryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuCountryMouseClicked
        new Pays().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuCountryMouseClicked

    private void menuBookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBookingMouseClicked
        new Reservation().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuBookingMouseClicked

    private void menuFlightMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuFlightMouseClicked
        new Vol().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuFlightMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreer;
    private javax.swing.JComboBox<String> comboPays;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuAirline;
    private javax.swing.JMenu menuAirport;
    private javax.swing.JMenu menuBooking;
    private javax.swing.JMenu menuCountry;
    private javax.swing.JMenu menuCreateAccount;
    private javax.swing.JMenu menuFlight;
    private javax.swing.JMenu menuManageAccount;
    private javax.swing.JTextField textAdresse;
    private javax.swing.JTextField textCp;
    private javax.swing.JTextField textDateNaiss;
    private javax.swing.JTextField textMail;
    private javax.swing.JTextField textNom;
    private javax.swing.JPasswordField textPassword;
    private javax.swing.JTextField textPrenom;
    private javax.swing.JTextField textVille;
    // End of variables declaration//GEN-END:variables
}
